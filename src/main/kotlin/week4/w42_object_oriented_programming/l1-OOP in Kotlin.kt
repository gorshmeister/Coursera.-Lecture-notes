package week4.w42_object_oriented_programming

/*
    The defaults are different
Любое объявление является public и final по умолчанию. Если вы хотите сделать его non-final, вам нужно явно пометить его как open.
Кроме того, в Kotlin нет приватной видимости пакетов. Есть новый, internal. Это означает, что объявление видно внутри этого же модуля.
Модуль — это набор файлов Kotlin, скомпилированных вместе.

Final означает, что объявление не может быть переопределен.

Open означает, что объявление может быть переопределено и должно быть отмечено явно.

Abstract такой же, как и в Java, это означает, что объявление должно быть переопределено.
Вы явно добавили модификатор переопределения к члену, который переопределяет другой член из суперкласса.

    Модификаторы видимости
Public виден везде

Internal виден в том же модуле

Protected — так же, как и в Java, это означает, что объявление видно в подклассах.
Однако есть небольшая разница с java. В Java protected также видно внутри того же пакета, в Kotlin это уже не так, protected только про подклассы.

Private различается по значению для члена класса и объявления верхнего уровня,
члены класса видны внутри класса, а закрытое объявление верхнего уровня видно внутри одного и того же файла.
 */

/*
    Package structure
Также есть разница в структуре упаковки. В Java каждый класс должен находиться в отдельном файле, даже если класс очень маленький.
В Kotlin это уже не так, вы можете поместить несколько классов в один файл, особенно полезно, если ваши классы — это классы данных, небольшие и простые.
Вы можете объединить одном файле несколько классов, связанных друг с другом. Вы также можете поместить объявления функций и свойств верхнего уровня и класс в один файл.
Имеет смысл объединить класс и все члены утилиты, подключаемые через этот класс, и собрать их все вместе в один файл.
Есть еще одно отличие, в Kotlin имя пакета не обязательно должно соответствовать структуре каталогов, имя вашего пакета может быть любым. Однако руководство по стилю Kotlin все же рекомендует встречаться по первому префиксу, названию компании из структуры каталогов, а все остальное сохранять, чтобы было проще ориентироваться в вашем коде.
 */
