package week3.w32_functionall_programming

/*
 Lambda syntax

     {x: Int, y: Int -> x + y}
          parameters -> body

Если мы передаём лямбду в качестве аргумента, мы можем поместить её внутри круглых скобок
    list.any({i: Int -> i > 0})
Если лямбда является последним аргуметном и круглые скобки пусты, мы можем опустить их
    list.any {i: Int -> i > 0}
Если тип аргумента ясен из контекста, он может быть опущен.
    list.any {i -> i > 0}
Если у лямбда есть свой аргумент, он может быть заменён на it
    list.any {it > 0}

Если нужно выразить сложную логику, то можно использовать многострочную лямбда,
 последнее выражение этой лямбды является результатом
    list.any {
        println("processing $it")
        it > 0
    }

    map.mapValues { (key, value) -> $key -> $value!" }
Если один из параметров лямбда не используется, то его заменяют на символ _
    map.mapValue { (_, value) -> "$value!"}
 */
